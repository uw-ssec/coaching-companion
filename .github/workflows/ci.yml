# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  PROJECT_NAME: "coaching_companion"

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout coaching_companion
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  
      - name: Record State
        run: |
          pwd
          echo github.ref is: ${{ github.ref }}
          echo GITHUB_SHA is: $GITHUB_SHA
          echo github.event_name is: ${{ github.event_name }}
          echo github workspace: ${{ github.workspace }}
          pip --version

      # We only want to install this on one run, because otherwise we'll have
      # duplicate annotations.
      - name: Install error reporter
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          python -m pip install pytest-github-actions-annotate-failures

      - name: Install coaching_companion
        run: |
          pip install -e ".[dev]"
          pip show ${{ env.PROJECT_NAME }}
          
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Test with pytest
        run: |
          pytest -vvv --cov=${{ env.PROJECT_NAME }} --cov-report=xml --cov-report=term tests/

      - name: Upload coverage reports to Codecov with GitHub Action
        if:
          ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest'}}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
